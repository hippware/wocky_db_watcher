FROM alpine:3.7

# Important!  Update this no-op ENV variable when this Dockerfile
# is updated with the current date. It will force refresh of all
# of the base images and things like `apt-get update` won't be using
# old cached versions when the Dockerfile is built.
ENV REFRESHED_AT=2018-02-02 \
    LANG=en_US.UTF-8 \
    HOME=/opt/app \
    SHELL=/bin/sh \
    # Set this so that CTRL+G works properly
    TERM=xterm \
    # Minimum configuration necessary to boot Wocky
    WOCKY_ENV=prod \
    WOCKY_INST=testing \
    WOCKY_HOST=localhost \
    REPLACE_OS_VARS=true

RUN \
    # Create default user and home directory, set owner to default
    mkdir -p ${HOME} && \
    mkdir -p ${HOME}/var/log && \
    adduser -s /bin/sh -u 1001 -G root -h ${HOME} -S -D default && \
    chown -R 1001:0 ${HOME} && \
    # Upgrade Alpine and base packages
    apk --no-cache upgrade && \
    # Install necessary shared libs
    apk add --no-cache \
      bash \
      ca-certificates \
      expat \
      libgcc \
      libstdc++ \
      ncurses \
      openssl \
      tcpdump \
      zlib && \
    chmod +s /usr/sbin/tcpdump && \
    # Update ca certificates
    update-ca-certificates --fresh

USER default
WORKDIR /opt/app

# Define mount points.
VOLUME ["/opt/app/var/log"]

# Deploy the application into the container
ARG RELEASE_NAME
COPY ./tmp/artifacts/${RELEASE_NAME}.tar.gz ./
RUN tar xfz ${RELEASE_NAME}.tar.gz && \
    rm -f ${RELEASE_NAME}.tar.gz

ENTRYPOINT ["bin/wocky_db_watcher"]
# CMD "foreground"
